generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  email String @unique
  emailVerified DateTime?
  hashedPassword String
  role     UserRole @default(DOCTOR)
  image String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  doctor   Doctor?  @relation(fields: [doctorId], references: [id])
  doctorId String?  @db.ObjectId @unique
}

enum UserRole {
  ADMIN
  DOCTOR
}

model Patient {
  id                      String     @id @default(auto()) @map("_id") @db.ObjectId
  name                    String
  identity                String    @unique
  birthDate               DateTime
  gender                  String
  phone                   String
  email                   String    @unique
  healthInsurance         Boolean
  healthInsuranceName     String?
  healthInsuranceNumber   String?
  information             String?
  nextConsultation        DateTime?

  address                 String
  number                  String
  complement              String?
  neighborhood            String
  state                   String
  postalCode              String
  city                    String

  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt

  consultations           Consultation[]
}

model Doctor {
  id                String    @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  specialty         String
  crm               String    @unique
  phone             String
  email             String    @unique
  schedule          String?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  consultations     Consultation[]
  user              User?
}

model Consultation {
  id                     String    @id @default(auto()) @map("_id") @db.ObjectId
  dateTime               DateTime
  concluded              Boolean @default(false)
  healthInsuranceName    String?
  healthInsuranceNumber  String?
  diagnosis              String?
  treatment              String?
  amountPaid             String
  createdAt              DateTime  @default(now())
  updatedAt              DateTime  @updatedAt

  patient                Patient   @relation(fields: [patientId], references: [id])
  patientId              String    @db.ObjectId
  doctor                 Doctor    @relation(fields: [doctorId], references: [id])
  doctorId               String    @db.ObjectId

  prescriptions          Prescription[]
}

model Prescription {
  id                String    @id @default(auto()) @map("_id") @db.ObjectId
  instructions      String
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  consultation      Consultation   @relation(fields: [consultationId], references: [id])
  consultationId    String    @db.ObjectId

  medications       Medication[]
}

model Medication {
  id                String    @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  dosage            String
  frequency         String
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  prescription      Prescription @relation(fields: [prescriptionId], references: [id])
  prescriptionId    String    @db.ObjectId
}